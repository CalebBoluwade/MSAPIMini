CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);


DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "Agents" (
        "AgentID" character varying(25) NOT NULL,
        "AgentHostName" character varying(100) NOT NULL,
        "AgentHostAddress" character varying(100) NOT NULL,
        "AgentPort" character varying(5) NOT NULL,
        "OS" character varying(45) NOT NULL,
        "AgentVersion" character varying(15) NOT NULL,
        "SDKVersion" character varying(10) NOT NULL,
        "LastSync" timestamp with time zone NOT NULL,
        "AgentLicenseKey" character varying(50) NOT NULL,
        "AgentLicenseKeyExpiryDate" timestamp with time zone NOT NULL,
        "OrganizationId" integer NOT NULL,
        "VP" boolean NOT NULL,
        "AppOwnerID" uuid NOT NULL,
        "AGENT_STATE" text NOT NULL,
        "DateAdded" timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        CONSTRAINT "PK_Agents" PRIMARY KEY ("AgentID")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "MonitorPlugins" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "PluginId" character varying(32) NOT NULL,
        "Name" character varying(50) NOT NULL,
        "Description" character varying(150) NOT NULL,
        "PluginType" text NOT NULL DEFAULT 'HealthCheck',
        "CompatibleDeviceTypes" text[] NOT NULL,
        "ComingSoon" boolean NOT NULL,
        CONSTRAINT "PK_MonitorPlugins" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "NetworkDeviceMetricData" (
        "SystemMonitorId" uuid NOT NULL,
        "DeviceName" text NOT NULL,
        "DeviceIP" text NOT NULL,
        "MetricName" text NOT NULL,
        "MetricDescription" text NOT NULL,
        "MetricValue" text NOT NULL,
        "LastPoll" timestamp with time zone NOT NULL
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "NotificationGroups" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "Name" character varying(255) NOT NULL,
        CONSTRAINT "PK_NotificationGroups" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "NotificationPlatforms" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "Name" character varying(100) NOT NULL,
        "Configuration" text NOT NULL,
        "IsEnabled" boolean NOT NULL,
        "IsDefault" boolean NOT NULL,
        CONSTRAINT "PK_NotificationPlatforms" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "SystemMonitor" (
        "SystemMonitorId" uuid NOT NULL,
        "ServiceName" character varying(100) NOT NULL,
        "Description" character varying(500) NOT NULL,
        "Plugins" text[] NOT NULL DEFAULT (ARRAY[]::text[]),
        "LastCheckTime" timestamp with time zone NOT NULL,
        "LastServiceUpTime" timestamp with time zone NOT NULL,
        "CurrentHealthCheck" text NOT NULL DEFAULT 'UnknownStatus',
        "CreatedAt" timestamp with time zone NOT NULL DEFAULT (CURRENT_TIMESTAMP),
        "IPAddress" text NOT NULL,
        "Port" integer NOT NULL,
        "IsMonitored" boolean NOT NULL,
        "Device" text NOT NULL,
        "FailureCount" integer NOT NULL,
        "RetryCount" integer NOT NULL DEFAULT (3),
        "Configuration" text NOT NULL DEFAULT ('{}'),
        "CheckInterval" text NOT NULL DEFAULT ('*/15 * * * *'),
        "IsAcknowledged" boolean NOT NULL,
        "SnoozeUntil" timestamp with time zone,
        CONSTRAINT "PK_SystemMonitor" PRIMARY KEY ("SystemMonitorId")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "Users" (
        "Id" bigint GENERATED BY DEFAULT AS IDENTITY,
        "FullName" character varying(75) NOT NULL,
        "Password" character varying(150) NOT NULL,
        "PhoneNumber" character varying(15),
        "WorkEmail" character varying(75) NOT NULL,
        "OrganizationId" integer NOT NULL,
        "Role" text NOT NULL,
        "MFASecret" character varying(150) NOT NULL,
        "IsMFAEnabled" boolean NOT NULL,
        "DateCreated" timestamp with time zone NOT NULL,
        CONSTRAINT "PK_Users" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "SystemDiskData" (
        "AgentID" character varying(55) NOT NULL,
        "Drive" character varying(75) NOT NULL,
        "FormatFree" character varying(10),
        "FormatSize" character varying(10),
        "Free" bigint,
        "Size" bigint,
        "Used" numeric(18,6),
        CONSTRAINT "FK_SystemDiskData_Agents_AgentID" FOREIGN KEY ("AgentID") REFERENCES "Agents" ("AgentID") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "SystemMetricData" (
        "ID" bigint GENERATED BY DEFAULT AS IDENTITY,
        "Timestamp" bigint,
        "AgentID" character varying(25) NOT NULL,
        "TimestampMem" bigint,
        "CPUUsage" double precision NOT NULL,
        "MemoryUsage" double precision NOT NULL,
        CONSTRAINT "PK_SystemMetricData" PRIMARY KEY ("ID"),
        CONSTRAINT "FK_SystemMetricData_Agents_AgentID" FOREIGN KEY ("AgentID") REFERENCES "Agents" ("AgentID") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "GroupNotificationPlatforms" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "GroupId" integer NOT NULL,
        "PlatformId" integer NOT NULL,
        CONSTRAINT "PK_GroupNotificationPlatforms" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_GroupNotificationPlatforms_NotificationGroups_GroupId" FOREIGN KEY ("GroupId") REFERENCES "NotificationGroups" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_GroupNotificationPlatforms_NotificationPlatforms_PlatformId" FOREIGN KEY ("PlatformId") REFERENCES "NotificationPlatforms" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "MonitoringResultHistory" (
        "Id" uuid NOT NULL,
        "SystemMonitorId" uuid NOT NULL,
        "ExecutionTime" timestamp with time zone NOT NULL DEFAULT (NOW()),
        "Status" text NOT NULL,
        "MainStatus" text NOT NULL,
        "HealthReport" character varying(200),
        CONSTRAINT "PK_MonitoringResultHistory" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_MonitoringResultHistory_SystemMonitor_SystemMonitorId" FOREIGN KEY ("SystemMonitorId") REFERENCES "SystemMonitor" ("SystemMonitorId") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "ServiceNotificationGroups" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "SystemMonitorId" uuid NOT NULL,
        "GroupId" integer NOT NULL,
        "DBUserId" bigint,
        "NotificationGroupId" integer,
        CONSTRAINT "PK_ServiceNotificationGroups" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_ServiceNotificationGroups_NotificationGroups_NotificationGr~" FOREIGN KEY ("NotificationGroupId") REFERENCES "NotificationGroups" ("Id"),
        CONSTRAINT "FK_ServiceNotificationGroups_SystemMonitor_SystemMonitorId" FOREIGN KEY ("SystemMonitorId") REFERENCES "SystemMonitor" ("SystemMonitorId") ON DELETE CASCADE,
        CONSTRAINT "FK_ServiceNotificationGroups_Users_DBUserId" FOREIGN KEY ("DBUserId") REFERENCES "Users" ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "UserNotificationGroups" (
        "Id" integer GENERATED BY DEFAULT AS IDENTITY,
        "UserId" bigint NOT NULL,
        "GroupId" integer NOT NULL,
        CONSTRAINT "PK_UserNotificationGroups" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_UserNotificationGroups_NotificationGroups_GroupId" FOREIGN KEY ("GroupId") REFERENCES "NotificationGroups" ("Id") ON DELETE CASCADE,
        CONSTRAINT "FK_UserNotificationGroups_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE TABLE "PluginMonitoringResults" (
        "Id" uuid NOT NULL,
        "MonitoringResultId" uuid NOT NULL,
        "PluginName" text NOT NULL,
        "PluginDescription" text NOT NULL,
        "PluginMetrics" text NOT NULL,
        "Status" text NOT NULL,
        "HealthReport" character varying(1000),
        CONSTRAINT "PK_PluginMonitoringResults" PRIMARY KEY ("Id"),
        CONSTRAINT "FK_PluginMonitoringResults_MonitoringResultHistory_MonitoringR~" FOREIGN KEY ("MonitoringResultId") REFERENCES "MonitoringResultHistory" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE UNIQUE INDEX "IX_Agents_AgentID_AgentHostAddress" ON "Agents" ("AgentID", "AgentHostAddress");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_GroupNotificationPlatforms_GroupId" ON "GroupNotificationPlatforms" ("GroupId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_GroupNotificationPlatforms_PlatformId" ON "GroupNotificationPlatforms" ("PlatformId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_MonitoringResultHistory_SystemMonitorId" ON "MonitoringResultHistory" ("SystemMonitorId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE UNIQUE INDEX "IX_MonitorPlugins_Name" ON "MonitorPlugins" ("Name");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_MonitorPlugins_PluginType" ON "MonitorPlugins" ("PluginType");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_PluginMonitoringResults_MonitoringResultId" ON "PluginMonitoringResults" ("MonitoringResultId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_ServiceNotificationGroups_DBUserId" ON "ServiceNotificationGroups" ("DBUserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_ServiceNotificationGroups_NotificationGroupId" ON "ServiceNotificationGroups" ("NotificationGroupId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_ServiceNotificationGroups_SystemMonitorId" ON "ServiceNotificationGroups" ("SystemMonitorId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_SystemDiskData_AgentID" ON "SystemDiskData" ("AgentID");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_SystemMetricData_AgentID" ON "SystemMetricData" ("AgentID");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE UNIQUE INDEX "IX_SystemMonitor_ServiceName" ON "SystemMonitor" ("ServiceName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_UserNotificationGroups_GroupId" ON "UserNotificationGroups" ("GroupId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    CREATE INDEX "IX_UserNotificationGroups_UserId" ON "UserNotificationGroups" ("UserId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250724082816_Initial') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250724082816_Initial', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729082137_AddedParams') THEN
    ALTER TABLE "SystemMonitor" ADD "Agent" text NOT NULL DEFAULT '';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729082137_AddedParams') THEN
    ALTER TABLE "SystemMonitor" ADD "PollerNode" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729082137_AddedParams') THEN
    CREATE TABLE "AvailablePollers" (
        "Id" text NOT NULL,
        "IPAddress" text NOT NULL,
        CONSTRAINT "PK_AvailablePollers" PRIMARY KEY ("Id")
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729082137_AddedParams') THEN
    CREATE UNIQUE INDEX "IX_SystemMonitor_Agent" ON "SystemMonitor" ("Agent");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729082137_AddedParams') THEN
    CREATE UNIQUE INDEX "IX_AvailablePollers_IPAddress" ON "AvailablePollers" ("IPAddress");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729082137_AddedParams') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250729082137_AddedParams', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729110936_MonitoringStatus') THEN
    CREATE UNIQUE INDEX "IX_SystemMonitor_IPAddress_Port" ON "SystemMonitor" ("IPAddress", "Port");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729110936_MonitoringStatus') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250729110936_MonitoringStatus', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729111804_AfterDrop') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250729111804_AfterDrop', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729115728_Daaa') THEN
    ALTER TABLE "Agents" RENAME COLUMN "VP" TO "IsMonitored";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729115728_Daaa') THEN
    ALTER TABLE "Agents" RENAME COLUMN "AppOwnerID" TO "MonitorID";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729115728_Daaa') THEN
    ALTER TABLE "MonitoringResultHistory" ALTER COLUMN "Status" SET DEFAULT 'UnknownStatus';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729115728_Daaa') THEN
    ALTER TABLE "MonitoringResultHistory" ALTER COLUMN "MainStatus" SET DEFAULT 'UnknownStatus';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729115728_Daaa') THEN
    ALTER TABLE "Agents" ALTER COLUMN "AGENT_STATE" TYPE character varying(50);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729115728_Daaa') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250729115728_Daaa', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729122125_RemoveAgentUnique') THEN
    DROP INDEX "IX_SystemMonitor_Agent";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729122125_RemoveAgentUnique') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250729122125_RemoveAgentUnique', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    DROP INDEX "IX_SystemMetricData_AgentID";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    DROP INDEX "IX_SystemDiskData_AgentID";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    ALTER TABLE "SystemDiskData" ADD CONSTRAINT "PK_SystemDiskData" PRIMARY KEY ("AgentID");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    ALTER TABLE "NetworkDeviceMetricData" ADD CONSTRAINT "PK_NetworkDeviceMetricData" PRIMARY KEY ("SystemMonitorId", "DeviceIP", "MetricName");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    CREATE INDEX "IDX_SystemMetrics_Agent" ON "SystemMetricData" ("AgentID", "Timestamp");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    CREATE INDEX "IDX_Disks_Agent" ON "SystemDiskData" ("AgentID", "Drive");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    CREATE UNIQUE INDEX "IX_Agents_AgentID" ON "Agents" ("AgentID");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250729133524_AddedIndexes') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250729133524_AddedIndexes', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804143910_ColumnLimit') THEN
    ALTER TABLE "SystemMetricData" ALTER COLUMN "AgentID" TYPE character varying(45);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804143910_ColumnLimit') THEN
    ALTER TABLE "Agents" ALTER COLUMN "SDKVersion" TYPE character varying(25);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804143910_ColumnLimit') THEN
    ALTER TABLE "Agents" ALTER COLUMN "AgentID" TYPE character varying(45);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804143910_ColumnLimit') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250804143910_ColumnLimit', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155101_AgentNulls') THEN
    ALTER TABLE "Agents" ALTER COLUMN "LastSync" DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155101_AgentNulls') THEN
    ALTER TABLE "Agents" ALTER COLUMN "IsMonitored" SET DEFAULT FALSE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155101_AgentNulls') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250804155101_AgentNulls', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155608_AgentNulls2') THEN
    ALTER TABLE "Agents" ALTER COLUMN "AgentLicenseKey" DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155608_AgentNulls2') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250804155608_AgentNulls2', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155950_AgentNulls3') THEN
    ALTER TABLE "Agents" ALTER COLUMN "OrganizationId" DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155950_AgentNulls3') THEN
    ALTER TABLE "Agents" ALTER COLUMN "MonitorID" DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155950_AgentNulls3') THEN
    ALTER TABLE "Agents" ALTER COLUMN "AgentLicenseKeyExpiryDate" DROP NOT NULL;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804155950_AgentNulls3') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250804155950_AgentNulls3', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804160911_AddUniqueIndexToSystemDiskData') THEN
    DROP INDEX "IDX_Disks_Agent";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804160911_AddUniqueIndexToSystemDiskData') THEN
    CREATE UNIQUE INDEX "IDX_Disks_Agent" ON "SystemDiskData" ("AgentID", "Drive");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250804160911_AddUniqueIndexToSystemDiskData') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250804160911_AddUniqueIndexToSystemDiskData', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250806200059_MonitorMetricsRel') THEN
    ALTER TABLE "SystemMetricData" ADD "SystemMonitorId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250806200059_MonitorMetricsRel') THEN
    CREATE INDEX "IX_SystemMetricData_SystemMonitorId" ON "SystemMetricData" ("SystemMonitorId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250806200059_MonitorMetricsRel') THEN
    ALTER TABLE "SystemMetricData" ADD CONSTRAINT "FK_SystemMetricData_SystemMonitor_SystemMonitorId" FOREIGN KEY ("SystemMonitorId") REFERENCES "SystemMonitor" ("SystemMonitorId") ON DELETE CASCADE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250806200059_MonitorMetricsRel') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250806200059_MonitorMetricsRel', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250815091626_T') THEN
    ALTER TABLE "SystemMonitor" DROP COLUMN "RetryCount";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250815091626_T') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250815091626_T', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250815091714_T2') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250815091714_T2', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816181802_PluginMetrics') THEN
    ALTER TABLE "PluginMonitoringResults" DROP COLUMN "PluginMetrics";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816181802_PluginMetrics') THEN
    ALTER TABLE "PluginMonitoringResults" ALTER COLUMN "PluginName" TYPE character varying(500);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816181802_PluginMetrics') THEN
    ALTER TABLE "PluginMonitoringResults" ALTER COLUMN "PluginDescription" TYPE character varying(500);
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816181802_PluginMetrics') THEN
    ALTER TABLE "PluginMonitoringResults" ADD "PluginMetricId" uuid NOT NULL DEFAULT '00000000-0000-0000-0000-000000000000';
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816181802_PluginMetrics') THEN
    CREATE TABLE "PluginMetrics" (
        "PluginMetricId" uuid NOT NULL,
        "PluginId" text NOT NULL,
        "PluginMetricName" text NOT NULL,
        "PluginMetricValue" text NOT NULL,
        "Unit" text NOT NULL,
        "PluginResultId" uuid NOT NULL,
        CONSTRAINT "PK_PluginMetrics" PRIMARY KEY ("PluginMetricId"),
        CONSTRAINT "FK_PluginMetrics_PluginMonitoringResults_PluginMetricId" FOREIGN KEY ("PluginMetricId") REFERENCES "PluginMonitoringResults" ("Id") ON DELETE CASCADE
    );
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816181802_PluginMetrics') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250816181802_PluginMetrics', '9.0.6');
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816213036_FixPluginMetrics') THEN
    ALTER TABLE "PluginMetrics" DROP CONSTRAINT "FK_PluginMetrics_PluginMonitoringResults_PluginMetricId";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816213036_FixPluginMetrics') THEN
    ALTER TABLE "PluginMetrics" DROP CONSTRAINT "PK_PluginMetrics";
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816213036_FixPluginMetrics') THEN
    ALTER TABLE "PluginMetrics" ADD CONSTRAINT "PK_PluginMetrics" PRIMARY KEY ("PluginResultId", "PluginMetricId");
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816213036_FixPluginMetrics') THEN
    ALTER TABLE "PluginMetrics" ADD CONSTRAINT "FK_PluginMetrics_PluginMonitoringResults_PluginResultId" FOREIGN KEY ("PluginResultId") REFERENCES "PluginMonitoringResults" ("Id") ON DELETE CASCADE;
    END IF;
END $EF$;

DO $EF$
BEGIN
    IF NOT EXISTS(SELECT 1 FROM "__EFMigrationsHistory" WHERE "MigrationId" = '20250816213036_FixPluginMetrics') THEN
    INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
    VALUES ('20250816213036_FixPluginMetrics', '9.0.6');
    END IF;
END $EF$;
