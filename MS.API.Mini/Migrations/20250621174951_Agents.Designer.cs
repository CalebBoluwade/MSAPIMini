// <auto-generated />
using System;
using MS.API.Mini.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MS.API.Mini.Migrations
{
    [DbContext(typeof(MonitorDBContext))]
    [Migration("20250621174951_Agents")]
    partial class Agents
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MS.API.Mini.Models.Agents", b =>
                {
                    b.Property<string>("AgentID")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasAnnotation("Relational:JsonPropertyName", "AgentID");

                    b.Property<string>("AGENT_STATE")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AgentHostAddress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("AgentHostName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("AgentLicenseKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasAnnotation("Relational:JsonPropertyName", "AgentLicenseKey");

                    b.Property<DateTime>("AgentLicenseKeyExpiryDate")
                        .HasColumnType("timestamp with time zone")
                        .HasAnnotation("Relational:JsonPropertyName", "AgentLicenseKeyExpiryDate");

                    b.Property<string>("AgentPort")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("AgentVersion")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasAnnotation("Relational:JsonPropertyName", "AgentVersion");

                    b.Property<Guid>("AppOwnerID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("LastSync")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasAnnotation("Relational:JsonPropertyName", "OS");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "Organization");

                    b.Property<string>("SDKVersion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasAnnotation("Relational:JsonPropertyName", "SDKVersion");

                    b.Property<bool>("VP")
                        .HasColumnType("boolean");

                    b.HasKey("AgentID");

                    b.HasIndex("AgentID", "AgentHostAddress")
                        .IsUnique();

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("MS.API.Mini.Models.SystemMonitor", b =>
                {
                    b.Property<Guid>("SystemMonitorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v4()");

                    b.Property<string>("CheckInterval")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("'*/5 * * * *'");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValueSql("'{}'");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FailureCount")
                        .HasColumnType("integer");

                    b.Property<string>("HealthReport")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasAnnotation("Relational:JsonPropertyName", "HealthReport");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAcknowledged")
                        .HasColumnType("boolean");

                    b.Property<string>("IsMonitored")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "IsMonitored");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<int>("RetryCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValueSql("3");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("SnoozeUntil")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SystemMonitorId");

                    b.ToTable("SystemMonitor");
                });

            modelBuilder.Entity("MS.API.Mini.Models.SystemMonitorView", b =>
                {
                    b.Property<Guid>("SystemMonitorId")
                        .HasColumnType("uuid")
                        .HasAnnotation("Relational:JsonPropertyName", "SystemMonitorId");

                    b.Property<string>("AgentAPI")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("CheckInterval")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Configuration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FailureCount")
                        .HasColumnType("integer");

                    b.Property<string>("HealthReport")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasAnnotation("Relational:JsonPropertyName", "HealthReport");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAcknowledged")
                        .HasColumnType("boolean");

                    b.Property<string>("IsMonitored")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "IsMonitored");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Port")
                        .HasColumnType("integer");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SnoozeUntil")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("SystemMonitorId");

                    b.ToTable((string)null);

                    b.ToView("SystemMonitorView", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
